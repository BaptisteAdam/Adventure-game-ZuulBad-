#BlueJ class context
comment0.target=Player
comment0.text=\r\n\ Cette\ classe\ s'occupe\ de\ garder\ tout\ ce\ qui\ concerne\ le\ player\ \:\ \r\n\ \ \ \ \ Sa\ position\ sur\ la\ map,\ son\ inventaire,\ son\ poids\ maximum\ portable.\r\n\ Elle\ s'occupe\ aussi\ de\ faire\ les\ actions\ impliquant\ le\ player\ \:\r\n\ \ \ \ \ Ce\ d\u00E9placer\ d'une\ salle\ a\ une\ autre,\ prendre\ ou\ poser\ un\ objet,\ manger.\r\n\ Gere\ aussi\ l'encombrement\ du\ player,\ s'il\ est\ encombre,\ il\ ne\ peux\ plus\ se\ deplacer.\r\n\r\n\ @author\ Baptiste\ Adam\r\n\ @version\ v2\ -\ 28/04/2017\r\n
comment1.params=pRoom
comment1.target=Player(pkg_Componnants.pkg_Rooms.Room)
comment1.text=\r\n\ Constructeur,\ cree\ un\ nouveau\ Player.\r\n\ @param\ pRoom\ La\ Room\ dans\ laquelle\ le\ joueur\ commence.\r\n
comment10.params=
comment10.target=int\ getLvl()
comment10.text=\r\n\ retourne\ le\ level\ du\ Player.\r\n\ @return\ Un\ int\r\n
comment11.params=
comment11.target=boolean\ possessBeamer()
comment11.text=\r\n\ retourne\ true\ si\ le\ Player\ possede\ le\ beamer.\r\n\ @return\ Un\ booleen\r\n
comment12.params=
comment12.target=java.lang.String[]\ getCurrentRoomItemTab()
comment12.text=\r\n\ retourne\ le\ tableau\ de\ String\ contenant\ tous\ les\ Items\ de\ la\ CurrentRoom.\r\n\ @return\ Un\ tableau\ de\ String\r\n
comment13.params=
comment13.target=java.lang.String[]\ getInventoryItemTab()
comment13.text=\r\n\ retourne\ le\ tableau\ de\ String\ contenant\ tous\ les\ Items\ de\ l'inventaire.\r\n\ @return\ Un\ tableau\ de\ String\r\n
comment14.params=
comment14.target=MovingCharacter\ getMovingCharacter()
comment14.text=\r\n\ Retourne\ le\ MovingCharacter\ le\ aCurrentRoom\ (null\ si\ il\ n'y\ en\ a\ pas).\r\n\ @return\ Un\ MovingCharacter\r\n
comment15.params=
comment15.target=boolean\ isMovingCharacter()
comment15.text=\r\n\ retourne\ true\ si\ il\ y\ a\ un\ MovingCharacter\ dan\ la\ CurrentRoom.\r\n\ @return\ Un\ boolean\r\n
comment16.params=
comment16.target=void\ removeMovingCharacter()
comment16.text=\r\n\ Supprime\ le\ MovingCharacter\ (apres\ un\ combat\ contre\ celui-ci).\r\n
comment17.params=pNom
comment17.target=java.lang.String\ getNPCMessage(java.lang.String)
comment17.text=\r\n\ Retourne\ le\ message\ du\ NPC\ dont\ le\ nom\ est\ passe\ en\ parametre.\r\n\ (Le\ joueur\ parle\ avec\ lui)\r\n\ @param\ pNom\ Une\ String,\ le\ nom\ du\ NPC\r\n\ @return\ Une\ String,\ le\ message\ du\ NPC\r\n
comment18.params=pNom
comment18.target=NPC\ getNPC(java.lang.String)
comment18.text=\r\n\ Retourne\ le\ NPC\ dont\ le\ nom\ est\ passe\ en\ parametre.\r\n\ @param\ pNom\ Une\ String,\ le\ nom\ du\ NPC\r\n\ @return\ Le\ NPC\r\n
comment19.params=pNom
comment19.target=void\ removeNPC(java.lang.String)
comment19.text=\r\n\ Supprime\ le\ NPC\ dont\ le\ nom\ est\ passe\ en\ parametre\ (apres\ un\ combat\ contre\ celui-ci).\r\n\ @param\ pNom\ Une\ String\ ,le\ nom\ du\ NPC\ a\ supprimer\r\n
comment2.params=
comment2.target=void\ setStats()
comment2.text=\r\n\ permet\ de\ passer\ le\ poids\ portable\ max\ a\ 100\ 000.\r\n\ N'EST\ UTILISE\ QUE\ DANS\ UN\ TEST\r\n
comment20.params=pNom
comment20.target=java.lang.String\ loot(java.lang.String)
comment20.text=\r\n\ Depose\ l'item\ que\ possedait\ le\ monstre\ vaincu\r\n\ et\ dont\ le\ nom\ est\ passe\ en\ parametre.\r\n\ @param\ pNom\ Une\ String,\ le\ nom\ du\ monstre\ vaincu\r\n\ @return\ Une\ String,\ un\ message\ indiquant\ qu'un\ item\ a\ ete\ depose\ dans\ la\ Room\r\n
comment21.params=pRace
comment21.target=void\ setRace(java.lang.String)
comment21.text=\r\n\ Permet\ de\ definir\ la\ race\ du\ Player.\r\n\ @param\ pRace\ La\ String\ de\ la\ Race.\r\n
comment22.params=pClasse
comment22.target=void\ setClasse(java.lang.String)
comment22.text=\r\n\ Permet\ de\ definir\ la\ classe\ du\ Player.\r\n\ @param\ pClasse\ La\ String\ de\ la\ Classe.\r\n
comment23.params=
comment23.target=int\ getPV()
comment23.text=\r\n\ Retourne\ les\ PV\ actuel\ du\ Player.\r\n\ @return\ Un\ int,\ les\ PV\ du\ Player\r\n
comment24.params=pPV
comment24.target=void\ setPV(int)
comment24.text=\r\n\ Permet\ de\ definir\ les\ PVs\ du\ Player.\r\n\ @param\ pPV\ Un\ int\ \:\ les\ PVs\r\n
comment25.params=pPV
comment25.target=void\ changePV(int)
comment25.text=\r\n\ Permet\ de\ faire\ varier\ les\ PV.\r\n\ @param\ pPV\ La\ valeur\ a\ ajouter\r\n
comment26.params=
comment26.target=int\ getDef()
comment26.text=\r\n\ Retourne\ la\ Defense\ actuelle\ du\ Player.\r\n\ @return\ Un\ int,\ la\ Def\ du\ Player\r\n
comment27.params=pDef
comment27.target=void\ setDef(int)
comment27.text=\r\n\ Permet\ de\ definir\ la\ Defence\ du\ Player.\r\n\ @param\ pDef\ Un\ int\ \:\ la\ Defence\r\n
comment28.params=pDef
comment28.target=void\ changeDef(int)
comment28.text=\r\n\ Permet\ de\ faire\ varier\ la\ Def.\r\n\ @param\ pDef\ La\ valeur\ a\ ajouter\r\n
comment29.params=
comment29.target=int\ getAgi()
comment29.text=\r\n\ Retourne\ l'Agilite\ actuelle\ du\ Player.\r\n\ @return\ Un\ int,\ l'Agi\ du\ Player\r\n
comment3.params=
comment3.target=boolean\ encombrement()
comment3.text=\r\n\ permet\ de\ savoir\ si\ le\ joueur\ est\ encombre.\r\n\ @return\ true\ si\ le\ Player\ est\ encombre\r\n
comment30.params=pAgi
comment30.target=void\ setAgi(int)
comment30.text=\r\n\ Permet\ de\ definir\ l'Agilite\ du\ Player.\r\n\ @param\ pAgi\ Un\ int\ \:\ l'Agilite\r\n
comment31.params=pAgi
comment31.target=void\ changeAgi(int)
comment31.text=\r\n\ Permet\ de\ faire\ varier\ l'Agi.\r\n\ @param\ pAgi\ La\ valeur\ a\ ajouter\r\n
comment32.params=
comment32.target=int\ getAtt()
comment32.text=\r\n\ Retourne\ l'Attaque\ actuelle\ du\ Player.\r\n\ @return\ Un\ int,\ l'Att\ du\ Player\r\n
comment33.params=pAtt
comment33.target=void\ setAtt(int)
comment33.text=\r\n\ Permet\ de\ definir\ l'Attaque\ du\ Player.\r\n\ @param\ pAtt\ Un\ int\ \:\ l'Attaque\r\n
comment34.params=pAtt
comment34.target=void\ changeAtt(int)
comment34.text=\r\n\ Permet\ de\ faire\ varier\ l'Att.\r\n\ @param\ pAtt\ La\ valeur\ a\ ajouter\r\n
comment35.params=
comment35.target=void\ attribuerStats()
comment35.text=\r\n\ Attribut\ les\ stattistiques\ du\ Player\ grace\ a\ sa\ race\ et\ sa\ classe\ (job)\r\n
comment36.params=pNom\ pBoolean
comment36.target=java.lang.String\ levelUp(java.lang.String,\ boolean)
comment36.text=\r\n\ attribut\ l'exp\ gagne\ lors\ du\ combat\ et\ verifie\ si\ le\ Player\ a\ lvl\ up.\r\n\ @param\ pNom\ Le\ nom\ du\ monstre\ vaincu\r\n\ @param\ pBoolean\ Un\ boolean,\ true\ si\ il\ faut\ jouer\ le\ son\ de\ lvl\ up.\r\n\ @return\ Une\ String,\ Un\ message\ si\ level\ up,\ rien\ sinon.\r\n
comment37.params=
comment37.target=java.lang.String\ stats()
comment37.text=\r\n\ Affiche\ les\ statistiques\ du\ Player.\r\n\ @return\ Une\ String\ contenant\ toutes\ les\ statistiques\ du\ Player\r\n
comment38.params=pDirection
comment38.target=java.lang.String\ changeRoom(java.lang.String)
comment38.text=\r\n\ Change\ aCurrentRoom\ avec\ vNextRoom,\r\n\ ajoute\ l'ancienne\ aCurrentRoom\ a\ allPreviousRoom.\r\n\ Gere\ aussi\ l'encombrement\ du\ Player.\r\n\ @param\ pDirection\ La\ direction\ vers\ laquelle\ on\ se\ dirige.\r\n\ @return\ \ "mort"\ si\ le\ MAX_WEIGHT\ passe\ a\ 0,\ "true"\ si\ le\ joueur\ a\ change\ de\ Room\ avc\ succes,\ "false"\ sinon.\r\n
comment39.params=
comment39.target=double\ getPlayerWeight()
comment39.text=\r\n\ permet\ d'obtenir\ le\ poid\ total\ que\ porte\ le\ player.\ \r\n\ (inventaire\ +\ beamer)\r\n\ @return\ Un\ double\r\n
comment4.params=
comment4.target=boolean\ chickenized()
comment4.text=\r\n\ retourne\ chickenized,\ permet\ de\ savoir\ si\ le\ Player\ est\ un\ poulet.\r\n\ @return\ Un\ boolean\r\n
comment40.params=
comment40.target=void\ emptyAllPreviousRoom()
comment40.text=\r\n\ permet\ de\ vider\ le\ stack\ aAllPreviousRoom.\r\n
comment41.params=
comment41.target=java.lang.String\ back()
comment41.text=\r\n\ Permet\ de\ retourner\ dans\ la\ Room\ que\ l'on\ viens\ de\ quitter\ si\ celle-ci\ existe.\r\n\ Gere\ aussi\ l'encombrement\ du\ Player.\r\n\ @return\ \ "mort"\ si\ le\ MAX_WEIGHT\ passe\ a\ 0,\ "true"\ si\ le\ joueur\ a\ change\ de\ Room\ avc\ succes,\ "false"\ sinon.\r\n
comment42.params=
comment42.target=java.lang.String\ getLocationInfo()
comment42.text=\r\n\ retourne\ la\ String\ contenant\ toutes\ les\ infos\ sur\ aCurrentRoom.\r\n\ @return\ La\ longDescription\ de\ aCurrentRoom.\r\n
comment43.params=
comment43.target=java.lang.String\ getImage()
comment43.text=\r\n\ Renvois\ l'image\ de\ la\ currentRoom.\r\n\ @return\ L'adresse\ de\ l'image\ de\ aCurrentRoom.\r\n
comment44.params=
comment44.target=int\ getRoomType()
comment44.text=\r\n\ permet\ d'avoir\ le\ type\ de\ aCurrrentRoom.\r\n\ @return\ Le\ type\ de\ aCurrentRoom.\r\n
comment45.params=pItem
comment45.target=java.lang.String\ take(pkg_Componnants.pkg_Items.Item)
comment45.text=\r\n\ Permet\ de\ prendre\ un\ Item\ se\ trouvant\ dans\ aCurrentRoom.\r\n\ Appelle\ aussi\ takeAction(\ .\ )\ pour\ gerer\ les\ actions\ des\ objets.\r\n\ @param\ pItem\ l'item\ que\ l'on\ veut\ prendre.\r\n\ @return\ La\ String\ correspondant\ a\ l'action\ effectuee.\r\n
comment46.params=pSecondWord
comment46.target=java.lang.String\ takeTest(java.lang.String)
comment46.text=\r\n\ effectue\ l'action\ apropri\u00E9e\ en\ fonction\ de\ si\ l'Item\ passe\ en\ parametre\ existe\r\n\ \ -\ affectue\ take(\ .\ )\ si\ l'Item\ existe\r\n\ \ -\ sinon,\ renvois\ "This\ Item\ do\ not\ exist."\r\n\ \ @param\ pSecondWord\ L'item\ que\ l'on\ veut\ prendre.\r\n\ \ @return\ La\ String\ correspondant\ a\ l'action\ effectu\u00E9e.\r\n
comment47.params=pNom
comment47.target=java.lang.String\ takeAction(java.lang.String)
comment47.text=\r\n\ Certain\ item\ ont\ une\ fonction\ des\ lors\ qu'ils\ sont\ dans\ l'inventaire\ (les\ equipements)\r\n\ Cette\ action\ est\ fait\ ici,\ Un\ Message\ adequat\ est\ renvoye.\r\n\ @param\ pNom\ Une\ String,\ le\ nom\ de\ l'item\ que\ le\ player\ vient\ de\ prendre\r\n\ @return\ Une\ String,\ le\ message\ lie\ a\ l'objet\r\n
comment48.params=pItem
comment48.target=java.lang.String\ drop(pkg_Componnants.pkg_Items.Item)
comment48.text=\r\n\ Permet\ de\ poser\ un\ Item\ de\ l'inventaire\ dans\ aCurrentRoom.\r\n\ Appelle\ aussi\ dropAction(\ .\ )\ pour\ gerer\ les\ actions\ des\ objets.\r\n\ @param\ pItem\ L'item\ que\ l'on\ veut\ poser.\r\n\ @return\ La\ String\ correspondant\ a\ l'action\ effectuee.\r\n
comment49.params=pSecondWord
comment49.target=java.lang.String\ dropTest(java.lang.String)
comment49.text=\r\n\ effectue\ l'action\ apropriee\ en\ fonction\ de\ si\ l'Item\ passe\ en\ parametre\ existe\r\n\ \ -\ affectue\ drop(\ .\ )\ si\ l'Item\ existe\r\n\ \ -\ sinon,\ renvois\ "You\ don't\ have\ this\ item"\r\n\ \ @param\ pSecondWord\ L'item\ que\ l'on\ veut\ poser.\r\n\ @return\ La\ String\ correspondant\ a\ l'action\ effectuee.\r\n
comment5.params=pBoolean
comment5.target=void\ setChickenized(boolean)
comment5.text=\r\n\ Permet\ de\ changer\ la\ valeur\ de\ chickenized\r\n\ @param\ pBoolean\ Un\ boolean,\ la\ nouvelle\ valeur\ de\ chickenized\r\n
comment50.params=pNom
comment50.target=java.lang.String\ dropAction(java.lang.String)
comment50.text=\r\n\ Certain\ item\ ont\ une\ fonction\ des\ lors\ qu'ils\ sont\ dans\ l'inventaire\ (les\ equipements)\r\n\ De\ fait,\ des\ qu'il\ ne\ sont\ plus\ dans\ l'inventaire,\ cette\ fonction\ doit\ etre\ retiree.\r\n\ Cette\ action\ est\ fait\ ici,\ Un\ Message\ adequat\ est\ renvoye.\r\n\ @param\ pNom\ Une\ String,\ le\ nom\ de\ l'item\ que\ le\ player\ vient\ de\ prendre\r\n\ @return\ Une\ String,\ le\ message\ lie\ a\ l'objet\r\n
comment51.params=
comment51.target=void\ reequip()
comment51.text=\r\n\ Re-equipe\ tout\ les\ items\ de\ l'inventaire.\r\n\ Est\ utilise\ apres\ avoir\ bu\ a\ la\ fontaine.\r\n
comment52.params=
comment52.target=java.lang.String\ getInventoryString()
comment52.text=\r\n\ Retourne\ la\ string\ de\ l'inventaire\ et\ tout\ ce\ qu'il\ contient\ +\ le\ beamer\ s'il\ existe\ +\ le\ poids\ porte\ par\ rapport\ au\ poids\ portable.\r\n\ @return\ Une\ String.\r\n
comment53.params=
comment53.target=java.lang.String\ takeBeamer()
comment53.text=\r\n\ permet\ de\ prendre\ le\ beamer\ dans\ aCurrentRoom\ si\ c'est\ possible.\r\n\ @return\ Une\ string\ correspondant\ a\ l'action\ effectuee.\r\n
comment54.params=
comment54.target=java.lang.String\ dropBeamer()
comment54.text=\r\n\ permet\ de\ poser\ le\ beamer\ dans\ aCurrentRoom.\r\n\ @return\ Une\ string\ correspondant\ a\ l'action\ effectuee.\r\n
comment55.params=
comment55.target=boolean\ chargeBeamer()
comment55.text=\r\n\ charge\ le\ beamer\ si\ c'est\ possible.\r\n\ @return\ Une\ string\ correspondant\ a\ l'action\ effectuee.\r\n
comment56.params=
comment56.target=java.lang.String\ fireBeamer()
comment56.text=\r\n\ active\ le\ beamer\ si\ c'est\ possible.\r\n\ @return\ Une\ string\ correspondant\ a\ l'action\ effectuee.\r\n
comment6.params=
comment6.target=int\ getNbRoomChickenized()
comment6.text=\r\n\ Permet\ d'obtenir\ le\ nombre\ de\ Room\ qu'il\ s'est\ passe\ de\ puis\ la\ transformation\ en\ poulet.\r\n\ @return\ Un\ int\r\n
comment7.params=
comment7.target=void\ resetNbRoomChickenized()
comment7.text=\r\n\ Remet\ aNbRoomChickenized\ a\ 0.\ Le\ Player\ n'est\ plus\ un\ poulet.\r\n
comment8.params=
comment8.target=pkg_Componnants.pkg_Items.ItemList\ getInventory()
comment8.text=\r\n\ retourne\ l'inventaire\ du\ Player.\r\n\ @return\ Une\ ItemList\r\n
comment9.params=pDouble
comment9.target=void\ changeMAX_WEIGHT(double)
comment9.text=\r\n\ additionne\ au\ poids\ max\ la\ valeur\ pass\u00E9\ en\ parametre.\r\n\ @param\ pDouble\ Un\ double\r\n
numComments=57
